# Maven
# Build your Java project and run tests with Apache Maven.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
- updating

parameters:
- name: EMAIL
  type: string
  default: hsaini@qasource.com
- name: EMAIL_PASS
  type: string
  default: password

variables:
  # Global Application Variables
  vmImageName: 'macOS-10.14'
  BUILD_NUM: '$(Build.BuildNumber)'
  MAVEN_CACHE_FOLDER: $(Pipeline.Workspace)/.m2/repository
  MAVEN_OPTS: '-Dmaven.repo.local=$(MAVEN_CACHE_FOLDER)'

stages:
- stage: SetupDependencies
  displayName: Setup Dependencies
  jobs:
  - job: SetupDependenciesJob
    displayName: Setup Dependencies Job
    pool:
      vmImage: $(vmImageName)
    steps:
    - bash: |
        echo "Installing Common  Depndencies"
        sudo npm install -g n
        sudo n stable
        npm install -g appium allure-commandline
        pip install requests 
        pip install html2text
        pip install bs4
        pip install mime
        pip install argparse
      displayName: 'Install Common  Depndencies'
    - task: Bash@3
      inputs:
        filePath: 'script/setup.sh'
      displayName: 'Install Emulator'
    - task: Cache@2
      inputs:
        key: '"funcs" | maven |"$(Agent.OS)" | **/pom.xml'
        restoreKeys: |
        path: $(MAVEN_CACHE_FOLDER)
      displayName: Cache Maven local repo
    - task: MavenAuthenticate@0
      displayName: Authenticate Maven to Artifacts feed
      inputs:
        artifactsFeeds: artifacts-maven
    - bash: |
        adb devices
        cd attendanceApp
        mvn install -Dmaven.test.skip=true
        mvn clean compile test -DsuiteXmlFile=Single -DdeviceName1=nexus -Dudid1="emulator-5554" -DdeviceName2=google -Dudid2="emulator-5556"
      displayName: 'Testing Application'
    - bash: |
        allure generate $(System.DefaultWorkingDirectory)/attendanceApp/target/allure-results --clean -o $(System.DefaultWorkingDirectory)/attendanceApp/target/allure-report
      displayName: Generate allure report
    - bash: |
        python script/slack_notifications.py --html_report_path $(System.DefaultWorkingDirectory)/attendanceApp/target/surefire-reports/index.html
      displayName: 'Sending Slack Notification'
    - bash: |
        python script/email_notifications.py --html_report_file "$(System.DefaultWorkingDirectory)/attendanceApp/target/TestReport/Test-Automaton-Report.html" --password ${{ parameters.EMAIL_PASS }} --email ${{ parameters.EMAIL }}
      displayName: 'Sending Email Notification'
    - publish: $(System.DefaultWorkingDirectory)/attendanceApp/target
      artifact: report

      